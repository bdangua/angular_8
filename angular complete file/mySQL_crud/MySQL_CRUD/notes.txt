MySQL CRUD Operations
----------------------
1) install mysql database.
        - "mysql-essential-5.2.3-falcon-alpha-win32.msi"

2) create the table for CRUD Operations.

    Default Password  :  root

    > show databases;
            - it will show available databases.

    > create schema testdb; 
            - where "testdb" is the name of the database.

    > use testdb;
            - we can switch to "testdb" database.

    > create table products(p_id integer, 
                            p_name varchar(20),
                            p_cost integer);
            - automatically "products" table will be created.

    > insert into products values(111,'p_one',10000);
            - automatically record will be inserted into table.

    > select * from products;
            - we can fetch the data from table.
****************************************
host      : "localhost"

user      : "root"

Password  : "root"

database  : "testdb"
****************************************


3) download the following node modules

    => express

    => mysql

    => body-parser

    => cors

        - "express" module used to develop the rest apis

        - "mysql" module used to interact with the mysql database.

        - "body-parser" module used to read the post parameters.

        - "cors" module used to enable the ports communication.

    > yarn add express mysql body-parser cors --save


4) develop rest apis by using nodejs

**************************************
MySQL_CRUD
         config
            db_properties.js
            db_connection.js
            queries.js
         fetch
            fetch.js
         insert 
            insert.js
         update
            update.js
         delete
            delete.js
         server.js
***************************************

    - "db_properties.js" file used to maintain the database details.

    - "db_connection.js" file used to create the mysql connection object.

    - "queries.js" file used to maintain the sql queries.

    - "fetch.js" file used to fetch the data from products table.

    - "insert.js" file used to insert the data into products table.

    - "update.js" file used to update the data in products table.

    - "delete.js" file used to delete the data from products table.

    - "server.js" file is the main server file.

    - "node" starts the execution from "server.js" file


5) start the node server

        > nodemon server

6) test the rest apis by using Postman

        => http://localhost:8080/fetch (GET)

        => http://localhost:8080/insert (POST)

        => http://localhost:8080/update  (POST)

        => http://localhost:8080/delete  (POST)













